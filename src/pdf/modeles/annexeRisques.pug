extends base

mixin niveau-criticite(idNiveau)
  -
    const niveau = referentiel.niveauGravite(idNiveau);
    const nombreRonds = niveau.position + 1;
    const tableauRonds = [...new Array(nombreRonds).fill(niveau.couleur), ...new Array(5 - nombreRonds).fill('gris')]
  each couleur in tableauRonds
    .rond(class = couleur)

block page
  +boite-grise('Cartographie des risques', 'cartographie')
    p.type Évalué au départ
    .matrice
      span.legende.legende-y Gravit&eacute;
      span.legende.legende-x Vraisemblance
      .axe.axe-y
        span 4
        span 3
        span 2
        span 1
      .axe.axe-x
        span 1
        span 2
        span 3
        span 4
      .conteneur-matrice
        each _, index in new Array(16).fill(0)
          - const x = index % 4
          - const y = Math.floor(index / 4)
          - const classe = donneesRisques.matriceNiveauxRisque[x + 1][4 - y]
          - const risquesPresent = donneesRisques.grilleRisques[y][x]
          - const jointsAvecEllispe = (liste) => liste.length > 7 ? liste.splice(0,6).join(', ')+"&hellip;" : liste.join(', ')
          - const libelleCellule = !risquesPresent ? "" : jointsAvecEllispe(risquesPresent)
          .cellule-matrice(class=`${classe} ${index}`)!= libelleCellule
    .legende-matrice
      ul
        - const niveaux = Object.entries(referentiel.niveauxRisque()).filter(([_, n]) => n.position >= 0).sort(([_, a], [__, b]) => a.position - b.position);
        each niveau in niveaux
          - const [id, descriptionNiveau] = niveau
          li(class=id)
            span.niveau!= descriptionNiveau.libelle + '&nbsp;:&nbsp;'
            = descriptionNiveau.description

  +boite-grise('Risques', 'liste-risques')
    ul.risques
      each risque in donneesRisques.risques
        li.bloc-risque.bloc-indivisible
          div(class=`identifiant-numerique ${risque.niveauRisque}`)= risque.identifiantNumerique
          .contenu-risque
            p.description= risque.intitule
            if referentiel.definitionRisque(risque.id)
              p.definition= referentiel.definitionRisque(risque.id)
            else
              p.definition= risque.description
            if risque.commentaire
              p.commentaire #[strong Commentaire :] #{risque.commentaire}
