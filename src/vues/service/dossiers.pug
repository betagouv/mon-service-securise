extends ./formulaireEtapier

mixin dossier({ statut, dossier, service, indiceCyber, afficheStatutHomologation, afficheActions, afficheTamponHomologation, classeCss })
  -
    const etapeCourante = referentiel.etapeDossierAutorisee(dossier.etapeCourante(), autorisationsService.peutHomologuer)
    const numeroDerniereEtapeCompletee = referentiel.numeroEtape(etapeCourante)
    const nombreTotalEtapes = referentiel.derniereEtapeParcours(autorisationsService.peutHomologuer).numero
    const estLectureSeule = autorisationsService.HOMOLOGUER.estLectureSeule
    const texteTronque = (texte, tailleLimite) => {
      const texteDecode = decode(texte);
      const longueurInitiale = texteDecode.length;
      let resultat = texteDecode.substring(0, tailleLimite);
      if (resultat.length < longueurInitiale) resultat += '…';
      return resultat
    }

  .dossier(class=classeCss)
    .contenu-dossier
      .contenu-gauche
        .contenu-statut
          .statut= statut
          .conteneur-statut-indice-cyber
            if afficheStatutHomologation
              - const statutHomologation = dossier.statutHomologation()
              .statut-homologation(class=statutHomologation)
                span!= referentiel.statutHomologation(statutHomologation).libelle
            if indiceCyber !== undefined
              .indice-cyber
                b Indice cyber&nbsp;
                span.conteneur-indice-cyber
                  span.note-indice-cyber!= `${indiceCyber.toFixed(1)}/${referentiel.indiceCyberNoteMax()}`
        .contenu-details
          .details
            if dossier.finalise
              div!= `Autorité d'homologation : ${texteTronque(dossier.autorite.nom, 37)} | ${texteTronque(dossier.autorite.fonction, 37)}`
              div= `Date d'échéance : ${dossier.descriptionProchaineDateHomologation()}`
            else
              - const titreEtape = referentiel.etapesParcoursHomologation().find((e) => e.id === etapeCourante)
              .contenu-etape-courante
                .numero-etape!= `Étape ${numeroDerniereEtapeCompletee} sur ${nombreTotalEtapes}`
                .titre-etape!= titreEtape.libelle
    if afficheActions
      .conteneur-actions
        if !estLectureSeule
          button(type='button' title="Supprimer le projet d'homologation")#supprime-dossier-courant
            img(src='/statique/assets/images/icone_croix_noire.svg' alt='')
        button.bouton.bouton-avec-icone.bouton-tertiaire#affiche-documents(type='button') Accéder aux documents
        a.lien-etape-courante(href = `/service/${service.id}/homologation/edition/etape/${etapeCourante}`)
          img.fleche(src='/statique/assets/images/forme_chevron_bleu.svg' alt='')
    if afficheTamponHomologation
      button.bouton.bouton-tertiaire.bouton-avec-icone#bouton-tampon-homologation(type='button') Télécharger l'encart d'homologation


mixin dossierFinalise({ dossier, service, afficheStatutHomologation, afficheTamponHomologation })
  - const dateDecision = new Intl.DateTimeFormat('fr-FR').format(new Date(dossier.decision.dateHomologation))
  +dossier({ statut: `Décision d'homologation du ${dateDecision}`, dossier, afficheStatutHomologation, afficheTamponHomologation, indiceCyber: dossier.indiceCyber })

mixin dossierCourant({ dossier, idService, service })
  +dossier({ statut: "Projet d'homologation", dossier, service, indiceCyber: service.indiceCyber().total, afficheActions: true, classeCss: "dossier-courant"})

block append styles
  link(href='/statique/assets/styles/dossiers.css', rel='stylesheet')

block title
  title Homologuer - Accueil | MonServiceSécurisé

block formulaire
  -
    const { dossiers } = service
    const dossierCourant = dossiers.dossierCourant()
    const dossierActif = dossiers.dossierActif()
    const dossiersPasses = dossiers.archives();

  .dossiers
    -
      const etapeSuivante = dossierCourant?.etapeCourante() ?? premiereEtapeParcours.id
      const estLectureSeule = autorisationsService.HOMOLOGUER.estLectureSeule
    if dossierCourant
      h3.titre-section Projet d'homologation en cours
      +dossierCourant({ dossier: dossierCourant, service })
    else
      if(!estLectureSeule)
        button.bouton#suivant(
          data-id-homologation = service.id,
          data-id-etape-suivante = etapeSuivante
        ) Nouvelle homologation

    if dossierActif
      h3.titre-section Dernière homologation validée
      +dossierFinalise({ dossier: dossierActif, service, afficheStatutHomologation: true, afficheTamponHomologation: peutVoirTamponHomologation })

    if dossiersPasses.length
      h3.titre-section Homologations passées
      each dossier in dossiersPasses
        +dossierFinalise({ dossier, afficheStatutHomologation: false })

    if !dossierCourant && !dossierActif && !dossiersPasses.length
      .aucun-projets
        span Aucun projet d'homologation n'est en cours ni aucune homologation n'a été validée

    script(type = "module", src = "/statique/service/homologation/dossiers.js")
