extends ../parcoursService
include ../fragments/inputIdentite
include ../fragments/inputPartiePrenante
include ../fragments/texteTronque
include ../fragments/elementsAjoutables/elementsAjoutablesActeurHomologation
include ../fragments/elementsAjoutables/elementsAjoutablesPartiePrenante

block title
  title Contacts utiles | MonServiceSécurisé

block append styles
  link(href = '/statique/assets/styles/homologation/rolesResponsabilites.css', rel = 'stylesheet')

block header-titre-page
  h3
    +texteTronque({texte: service.nomService() || ''})

block titre
  h1 Contacts utiles
block sous-titre
  h2 Enregistrer les coordonnées des personnes importantes pour le service

block formulaire
  - const estLectureSeule  = autorisationsService.CONTACTS.estLectureSeule
  form.homologation#roles-responsabilites

    section
      nav#onglets-liens
        a.actif#onglet-gouvernance Gouvernance
        a#onglet-parties-prenantes Parties prenantes

      .onglet#gouvernance
        +inputIdentite({
          role: "Autorité d'homologation",
          nomParametre: 'autoriteHomologation',
          lectureSeule: estLectureSeule
        })

        +inputIdentite({
          role: 'Spécialiste cybersécurité',
          nomParametre: 'expertCybersecurite',
          lectureSeule: estLectureSeule
        })

        +inputIdentite({
          role: 'Délégué(e) à la protection des données à caractère personnel',
          nomParametre: 'delegueProtectionDonnees',
          lectureSeule: estLectureSeule
        })

        +inputIdentite({
          role: 'Responsable métier du projet',
          nomParametre: 'piloteProjet',
          lectureSeule: estLectureSeule
        })

        +elementsAjoutablesActeurHomologation({
          donnees: service.rolesResponsabilites.acteursHomologation.toJSON(),
          lectureSeule: estLectureSeule
        })

      .onglet#parties-prenantes
        +inputPartiePrenante({
          categorie: 'Hébergement du service',
          nomParametre: 'hebergement',
          donnees: service.rolesResponsabilites.partiesPrenantes.hebergement(),
          lectureSeule: estLectureSeule
        })

        +inputPartiePrenante({
          categorie: 'Développement / fourniture du service',
          nomParametre: 'developpementFourniture',
          donnees: service.rolesResponsabilites.partiesPrenantes.developpementFourniture(),
          lectureSeule: estLectureSeule
        })

        +inputPartiePrenante({
          categorie: 'Maintenance du service',
          nomParametre: 'maintenanceService',
          donnees: service.rolesResponsabilites.partiesPrenantes.maintenanceService(),
          lectureSeule: estLectureSeule
        })

        +inputPartiePrenante({
          categorie: 'Gestion de la sécurité du service',
          nomParametre: 'securiteService',
          donnees: service.rolesResponsabilites.partiesPrenantes.securiteService(),
          lectureSeule: estLectureSeule
        })

        +elementsAjoutablesPartiePrenante({
          donnees: service.rolesResponsabilites.partiesPrenantes.specifiques(),
          lectureSeule: estLectureSeule
        })

    if(!estLectureSeule)
      button.bouton(idHomologation = service.id) Enregistrer &nbsp;&nbsp;›

  script(type = 'module', src = '/statique/service/rolesResponsabilites.js')
