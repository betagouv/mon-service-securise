extends ../documentImprimable
include ../fragments/descriptionIndiceCyber
include ../fragments/indicesCyberParCategorie
include ../fragments/scoreIndiceCyber
include ../fragments/statistiquesMesures
include ../fragments/totalMesures

block append styles
  link(href='/statique/assets/styles/syntheseSecurite.css', rel='stylesheet')
  link(href='/statique/assets/styles/pdfs.css', rel='stylesheet')

block append page

  .page
    header
      .bloc-marque
        img.marianne(src='/statique/assets/images/marianne.png')
        .republique-francaise RÉPUBLIQUE<br>FRANÇAISE
        img.devise(src='/statique/assets/images/devise.png')
      img.logo-mss(src='/statique/assets/images/logo_mss.png')
      img.logo-anssi(src='/statique/assets/images/logo_anssi.png')

    h1 Synthèse de la sécurité du service
    .nom-service!= service.nomService()

    .synthese
      section.description
        h2 Résumé
        dl
          dt Type :
          dd= service.descriptionTypeService()
        dl
          dt Données stockées :
          dd( class = `localisation-donnees ${service.localisationDonnees()}`)= service.descriptionLocalisationDonnees()
        dl
          dt Statut :
          dd= service.descriptionStatutDeploiement()

        dl.presentation
          dt Présentation :
          dd= service.presentation()
      section.indice-cyber
        - const indiceCyber = service.indiceCyber();
        - const noteMax = referentiel.indiceCyberNoteMax()
        - const formatIndiceCyber = Intl.NumberFormat('fr', { minimumFractionDigits: 1, maximumFractionDigits: 1 }).format;

        .score-indice-cyber
          +scoreIndiceCyber(formatIndiceCyber, indiceCyber.total, noteMax)

        .indices-par-categories
          h3 Par catégorie :
          +indicesCyberParCategorie(referentiel, formatIndiceCyber, indiceCyber, noteMax)

      section.mesures
        h2 Mesures de sécurité

        h3 Par niveau de criticité
        .statistiques-par-criticite
          +statistiquesMesures({
            id: 'mesures-indispensables',
            titre: 'Indispensables',
            styleTitre: 'important',
            statistiques: service.statistiquesMesuresIndispensables(),
          })
          +statistiquesMesures({
            id: 'mesures-recommandees',
            titre: 'Recommandées',
            statistiques: service.statistiquesMesuresRecommandees(),
          })
        +totalMesures(service.nombreTotalMesuresGenerales())

        h3 Par catégorie
        .statistiques-par-categorie
          - const faites = (idCategorie) => service.statistiquesMesures().misesEnOeuvre(idCategorie)
          - const enCours = (idCategorie) => service.statistiquesMesures().enCours(idCategorie)
          - const nonFaites = (idCategorie) => service.statistiquesMesures().nonFaites(idCategorie)
          - const aRemplir = (idCategorie) => service.statistiquesMesures().aRemplir(idCategorie)

          each idCategorie in service.statistiquesMesures().categories()
            .categorie
              h4= referentiel.descriptionCategorie(idCategorie)
              .graphique
                if faites(idCategorie)
                  .statut.faites= faites(idCategorie)
                if enCours(idCategorie)
                  .statut.en-cours= enCours(idCategorie)
                if nonFaites(idCategorie)
                  .statut.non-faites= nonFaites(idCategorie)
                if aRemplir(idCategorie)
                  .statut.a-remplir= aRemplir(idCategorie)
        +totalMesures(service.nombreTotalMesuresGenerales(), service.nombreMesuresSpecifiques())

    footer
      .infos-indice-cyber
        .
          * 
        +descriptionIndiceCyber()

      .nature-document
        span.nom-mss MonServiceSécurisé – 
        span Homologation de sécurité du service « #{service.nomService()} »

  script(type = 'module', src = '/statique/service/syntheseSecurite.js')
