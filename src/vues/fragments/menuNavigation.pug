- const estSurCreationDeService = !!service.id === false
- const urlDeService = (suffixe) => `/service/${service.id}/${suffixe}`

mixin etapeParcours({ id, url, nom, sousTitre, estVisible, statut })
  -
    const estActive = etapeActive === id
    const statutSaisie = (s) => {
      switch (s) {
        case InformationsHomologation.COMPLETES: return 'faite';
        case InformationsHomologation.A_COMPLETER: return 'en-cours';
        default: return '';
      }
    }

  if estVisible
    li
      a(href= estSurCreationDeService ? '#' : url, class = estActive ? 'actif' : '')
        .pastille
          span.action-saisie(id = id)
        .none-si-ferme
          span.nom-action!= nom
          span.sous-titre!= sousTitre
        .statut-saisie.none-si-ferme(class = statutSaisie(statut))
      if(block)
        block

.menu-navigation(class = preferencesUtilisateur.etatMenuNavigation === 'ferme' ? 'ferme' : '')
  .actions
    if !estSurCreationDeService
      button#gerer-contributeurs(class = preferencesUtilisateur.etatMenuNavigation === 'ferme' ? '' : 'ouvert')
        img(src = '/statique/assets/images/bouton_inviter_collaborateur_persona.svg')
        span.none-si-ferme.nombre-contributeurs= service.contributeurs.length
        span.inviter-contributeurs Gérer les contributeurs
    button.repli-menu
      img(src = '/statique/assets/images/forme_chevron_blanc.svg' alt='Chevron vers la gauche')

  .parcours
    ul.etapes
      if estSurCreationDeService
        +etapeParcours({
          id: 'descriptionService',
          nom: 'Décrire',
          sousTitre: 'Évaluer les besoins de sécurité',
          statut: service.descriptionService.statutSaisie(),
          estVisible: true
        })
      else
        +etapeParcours({
          id: 'descriptionService',
          url: urlDeService('descriptionService'),
          nom: 'Décrire',
          sousTitre: 'Évaluer les besoins de sécurité',
          statut: service.descriptionService.statutSaisie(),
          estVisible: !(autorisationsService.DECRIRE.estMasque)
        })
        +etapeParcours({
          id: 'mesures',
          url: urlDeService('mesures'),
          nom: 'Sécuriser',
          sousTitre: "Mesurer et renforcer l'indice cyber",
          visibileSurCreationService: false,
          statut: service.mesures.statutSaisie(),
          estVisible: !(autorisationsService.SECURISER.estMasque)
        })
          a.none-si-ferme#lien-indice-cyber(href=urlDeService('indiceCyber'))
            | Indice cyber
            img(src='/statique/assets/images/forme_chevron_bleu_fonce.svg')
        +etapeParcours({
          id: 'dossiers',
          url: urlDeService('dossiers'),
          nom: 'Homologuer',
          sousTitre: "Générer un dossier d'homologation",
          statut: service.dossiers.statutSaisie(),
          estVisible: !(autorisationsService.HOMOLOGUER.estMasque)
        })

  if !estSurCreationDeService
    .autres-liens
      ul
        if !autorisationsService.RISQUES.estMasque
          li
            a(href = urlDeService('risques'), class = etapeActive === 'risques' ? 'actif' : '')
              .pastille
                img(src = '/statique/assets/images/icone_risques.svg' alt="Icône d'un panneau « Danger »", id = 'icone-risques')
              span.none-si-ferme Risques
        if !autorisationsService.CONTACTS.estMasque
          li
            a(href = urlDeService('rolesResponsabilites'), class = etapeActive === 'contactsUtiles' ? 'actif' : '')
              .pastille
                img(src = '/statique/assets/images/icone_contacts_utiles.svg' alt="Icône d'un livre ouvert")
              span.none-si-ferme Contacts utiles
        li
          a#voir-telechargement(href = '#')
            .pastille
              img(src = '/statique/assets/images/icone_telechargement_fichier.svg' alt='Icône de téléchargement de fichier')
            span.none-si-ferme Télécharger les PDF

