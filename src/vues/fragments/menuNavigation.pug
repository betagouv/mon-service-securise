- const estSurCreationDeService = !!service.id === false

mixin etapeParcours({ id, position, url, description, sousTitre, statut })
  -
    const estActive = etapeActive === id
    const statutSaisie = (s) => {
      switch (s) {
        case InformationsHomologation.COMPLETES: return 'faite';
        case InformationsHomologation.A_COMPLETER: return 'en-cours';
        default: return '';
      }
    }

  li
    a(href = estSurCreationDeService ? '#' : url, class = estActive ? 'actif' : '')
      span.position
        !=(position+1)
      !=description
      span.chevron
      span.statut-saisie(class = statutSaisie(statut))
    if estActive
      span.sous-titre
        !=sousTitre

.menu-navigation
  .accueil
    a(href="/" title="Naviguer vers la page d'acceuil")

  .nom-service
    +texteTronque({texte: service.nomService() || ''})

  .parcours
    ul.etapes
      each actionSaisie in actionsSaisie
        +etapeParcours(actionSaisie)

    if !estSurCreationDeService
      .outils-complementaires
        h4 Outils complémentaires
        ul
          li
            a.lien-contacts-utiles(href = `/service/${service.id}/rolesResponsabilites`) Contacts utiles
          li
            a.lien-risques(href = `/service/${service.id}/risques`) Risques


  a.lien-tableau-de-bord(href="/tableauDeBord" title="Retour au tableau de bord") Tableau de bord
  a.lien-deconnexion(href="/connexion" title="Déconnexion") Se déconnecter
