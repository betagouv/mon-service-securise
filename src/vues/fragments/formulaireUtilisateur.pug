include ./inputChoix

block append styles
  link(href = '/statique/assets/styles/formulaire.css', rel = 'stylesheet')
  link(href = '/statique/assets/styles/modules/validation.css', rel = 'stylesheet')
  link(href = '/statique/assets/styles/utilisateur.css', rel = 'stylesheet')
  link(href = '/styles/selectize.default.min.css', rel = 'stylesheet')
  link(href = '/statique/assets/styles/modules/selectize.css', rel = 'stylesheet')

block append scripts
  script(id = 'donnees-departements', type = 'application/json').
    !{JSON.stringify(departements || [])}
  script(src = "/statique/bibliotheques/selectize-0.15.2.min.js")
  script(src = "/statique/plugins/selectize.aucun-resultat.js")
  script(src = "/statique/utilisateur/suggestionEntite.js")

mixin formulaireUtilisateur({ donnees = {}, emailLectureSeule, forceEmailsTransactionnels })
  .mention champ obligatoire

  section
    block champs-formulaire
      -
        const patternNomPrenom = '^\\D+$';
        const messageErreurNomPrenom = (label) => `
          Le ${label} est obligatoire. Veuillez renseigner des lettres avec ou sans signes diacritiques.
          Les chiffres ne sont pas autorisés.
        `;

      if emailLectureSeule
        p.affichage-simple
          strong E-mail&nbsp
          span : #{donnees.email}

      .requis(data-nom = 'prenom')
        label Prénom
          br
          input(
            id = 'prenom',
            name = 'prenom',
            value != donnees.prenom,
            placeholder = 'ex : Jean',
            required,
            pattern = patternNomPrenom,
            title = ''
          )
          .message-erreur= messageErreurNomPrenom('prénom')

      .requis(data-nom = 'nom')
        label Nom
          br
          input(
            id = 'nom',
            name = 'nom',
            value != donnees.nom,
            placeholder = 'ex : Dupont',
            required,
            pattern = patternNomPrenom,
            title = ''
          )
          .message-erreur= messageErreurNomPrenom('nom')

      if !emailLectureSeule
        .requis(data-nom = 'email')
          label E-mail
            br
            input(
              id = 'email',
              name = 'email',
              type = 'email',
              placeholder = 'ex : jean.dupont@domaine.fr',
              required,
              title = ''
            )
            .message-erreur L'e-mail est obligatoire. Veuillez respecter le format jean.dupont@domaine.fr.

      label Téléphone
        .information Pour bénéficier d’un accompagnement personnalisé
        input(
          id = 'telephone',
          name = 'telephone',
          type = 'tel',
          value = donnees.telephone,
          placeholder = 'ex : 0XXXXXXXXX',
          pattern = '^0\\d{9}$',
          title = ''
        )
        .message-erreur Le numéro de téléphone doit respecter le format 0000000000.

      .requis
        label(for = 'departementEntitePublique-selectize') Département de votre organisation
          select(
            id = 'departementEntitePublique-selectize',
            name = 'departementEntitePublique-selectize',
            placeHolder = 'ex : 33, Morbihan',
            required,
          )
          .message-erreur Ce champ est obligatoire. Veuillez sélectionner une entrée.
          input(type='hidden' name='departementEntitePublique' id='departementEntitePublique' value != donnees.departementEntitePublique)

      .requis
        label(for = 'nomEntitePublique-selectize') Nom de votre organisation
          select(
            id = 'nomEntitePublique-selectize',
            name = 'nomEntitePublique-selectize',
            placeHolder = 'ex : Agglomération de Mansart, Société Y',
            required,
          )
          .icone-chargement
          .message-erreur Ce champ est obligatoire. Veuillez sélectionner une entrée.
          input(type='hidden' name='nomEntitePublique' id='nomEntitePublique' value != donnees.nomEntitePublique)

      .requis
        label.fonction-poste Fonction/poste
          - const postes = donnees.postes ?? []
          - const autrePoste = postes.find((poste) => poste !== 'RSSI' && poste !== 'DPO' && poste !== 'DSI')
          .conteneur-checkbox
            input(
              id = 'posteRSSI'
              name = 'posteRSSI'
              checked = postes.includes('RSSI')
              type = 'checkbox'
              class = 'input-checkbox'
            )
            label.label-checkbox(for = 'posteRSSI') Responsable de la sécurité des systèmes d'information
          .conteneur-checkbox
            input(
              id = 'posteDPO'
              name = 'posteDPO'
              checked = postes.includes('DPO')
              type = 'checkbox'
              class = 'input-checkbox'
            )
            label.label-checkbox(for = 'posteDPO') Délégué/e à la protection des données personnelles
          .conteneur-checkbox
            input(
              id = 'posteDSI'
              name = 'posteDSI'
              checked = postes.includes('DSI')
              type = 'checkbox'
              class = 'input-checkbox'
            )
            label.label-checkbox(for = 'posteDSI') Responsable des systèmes d'information
          .conteneur-checkbox.conteneur-autre-poste
            input(
              id = 'posteAutrePresent'
              name = 'posteAutrePresent'
              checked = autrePoste
              type = 'checkbox'
              class = 'input-checkbox'
            )
            label.label-checkbox(for = 'posteAutrePresent') Autre
            p(id = 'info-complementaire-poste-autre') Merci de préciser votre fonction/poste
            input(
              id = 'posteAutre',
              name = 'posteAutre',
              value != autrePoste
            )
            .message-erreur Ce champ est obligatoire. Veuillez sélectionner une ou plusieurs options.

      .preferences-communication
        label Préférences de communication
        .conteneur-checkbox
          div
            input(
              id = 'infolettreAcceptee',
              name = 'infolettreAcceptee',
              checked = donnees.infolettreAcceptee,
              type = 'checkbox'
              class = 'input-checkbox'
            )
            label.label-checkbox(for = 'infolettreAcceptee') J'accepte de recevoir la lettre d'information MonServiceSécurisé.

          if forceEmailsTransactionnels
            input(type='hidden' id='transactionnelAccepte' value='true')
          else
            div
              input(
                id = 'transactionnelAccepte',
                name = 'transactionnelAccepte',
                checked = donnees.transactionnelAccepte,
                type = 'checkbox'
                class = 'input-checkbox'
              )
              label.label-checkbox(for = 'transactionnelAccepte') J'accepte de recevoir des informations relatives à mon utilisation de MonServiceSécurisé
