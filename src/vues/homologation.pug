extends deuxColonnes
include cartes/indiceCyber

mixin action({ description, url, statut })
  - let classeStyleStatut
  -
    switch(statut) {
      case InformationsHomologation.A_SAISIR: classeStyleStatut = 'a-faire'; break;
      case InformationsHomologation.A_COMPLETER: classeStyleStatut = 'a-completer'; break;
      case InformationsHomologation.COMPLETES: classeStyleStatut = 'faite'; break;
      default: '';
    }

  a.action(class = classeStyleStatut, href = url)= description


block append styles
  link(href = '/statique/assets/styles/homologation.css', rel = 'stylesheet')

block retour
  a(href = '/espacePersonnel') â€¹&nbsp;&nbsp;Mon espace personnel

block zone-principale
  .details-homologation
    .tableau-bord
      .description-dossier
        .titre-homologation
          h2!= homologation.nomService()
      a.bouton(href = `/homologation/${homologation.id}/decision`) Voir le document d'homologation

    section.actions
      ul
        each actionSaisie in actionsSaisie
          li
            +action(actionSaisie)

block cartes-informations
  if process.env.AVEC_INDICE_CYBER
    - const indiceCyber = homologation.indiceCyber()
    +indiceCyber({ referentiel, indiceCyber })
