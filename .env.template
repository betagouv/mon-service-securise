PORT_MSS= # port sur lequel le serveur écoute
URL_BASE_MSS= # URL de base du site web, ex. http://www.monservicesecurise.cyber.gouv.fr
CHEMIN_BASE_ABSOLU= # chemin où est déployé l'application. Exemple : /usr/src/app/

# CREATION_UTILISATEUR_DEMO= #variable à décommenter pour créer l'utilisateur de démonstration
PRENOM_UTILISATEUR_DEMO= # prénom de l'utilisateur de démonstration
NOM_UTILISATEUR_DEMO= # nom de l'utilisateur de démonstration
EMAIL_UTILISATEUR_DEMO= # adresse mail de l'utilisateur de démonstration
MOT_DE_PASSE_UTILISATEUR_DEMO= # mot de passe de l'utilisateur de démonstration
SIRET_ENTITE_UTILISATEUR_DEMO= # siret de l'entité de l'utilisateur de démonstration
NOM_ENTITE_UTILISATEUR_DEMO= # nom de l'entité de l'utilisateur de démonstration
DEPARTEMENT_ENTITE_UTILISATEUR_DEMO= # département de l'entité de l'utilisateur de démonstration

SENDINBLUE_EMAIL_API_URL_BASE= # URL de base de l'API brevo utilisée pour envoi des mails
SENDINBLUE_EMAIL_CLEF_API= # clef d'API sendinblue utilisée pour envoi des mails
SENDINBLUE_TRACKING_CLEF_API= # clef d'API sendinblue utilisée pour les événements de tracking
SENDINBLUE_TEMPLATE_FINALISATION_INSCRIPTION= # id de template
SENDINBLUE_TEMPLATE_INVITATION_CONTRIBUTION= # id de template
SENDINBLUE_TEMPLATE_INVITATION_INSCRIPTION= # id de template
SENDINBLUE_TEMPLATE_REINITIALISATION_MOT_DE_PASSE= # id de template
SENDINBLUE_TEMPLATE_TENTATIVE_REINSCRIPTION= # id de template
SENDINBLUE_TEMPLATE_NOTIFICATION_EXPIRATION_HOMOLOGATION= # id de template
SENDINBLUE_TEMPLATE_NOTIFICATION_HOMOLOGATION_EXPIREE= # id de template
SENDINBLUE_TEMPLATE_FELICITATION_HOMOLOGATION = # id de template
SENDINBLUE_ID_LISTE_POUR_INFOLETTRE= # l'ID de la liste de contacts utilisée pour les mails d'informations (newsletter)

ADRESSES_IP_AUTORISEES= # Seules ces IP seront autorisées. Les autres ne seront pas servies. Séparées par des ',' s'il y en a plusieurs. Supprimer la variable d'env pour désactiver le filtrage.

SENTRY_DSN= # Le « DSN » du projet Sentry sur lequel envoyer les exceptions. Laisser commenté pour ne pas utiliser Sentry.
SENTRY_ENVIRONNEMENT= # L'environnement Sentry auquel seront associées les exceptions loguées, si Sentry est utilisé.
SENTRY_SAMPLE_RATE_DU_TRACING= # Valeur entre 0 et 1 indiquant le %age de requête envoyée au tracing. Mettre 0.2 pour envoyer 20% des requêtes au tracing Sentry. 0 ou supprimer la variable pour désactiver le tracing.
SENTRY_CHEMINS_IGNORES_PAR_TRACING= # Les chemins de requêtes qui doivent être ignorés par Sentry. Séparés par des virgules. Ex : "/statique/,/bibliotheques/,/style/"

STATISTIQUES_DOMAINE_METABASE_MSS= # Le domaine hébergeant Metabase, ex. https://domaine.fr/
CLE_SECRETE_INTEGRATION_METABASE_MSS = # La clé secrète d'intégration de Metabase ("Embedding secret key") permettant d'afficher du contenu intégré en iframe
IDENTIFIANT_DASHBOARD_SUPERVISION_METABASE_MSS = # L'identifiant du dashboard pour les superviseurs dans Metabase

URL_SERVEUR_BASE_DONNEES= # URL du serveur de base de données, ex. postgres://user@mss-db/mss

SECRET_COOKIE= # chaîne utilisée pour chiffrer le cookie de session
SECRET_JWT= # chaîne utilisée pour chiffrer le JWT

ID_MATOMO=# ID du site déclaré dans Matomo. Laisser vide ou commenter la ligne pour ne pas utiliser Matomo
MATOMO_URL_TAG_MANAGER=# URL du `.js` du tag manager Matomo, ex. https://stats.data.gouv.fr/js/container_XXXX.js

GOOGLE_SEARCH_CONSOLE_VERIFICATION=# Code de vérification de la Google Search Console. Laisser vide pour ne pas inclure la balise <meta> de vérification.

# Journal MSS
URL_SERVEUR_BASE_DONNEES_JOURNAL= # URL de la base de données du Journal MSS. ex. postgres://user@mss-journal-db:5432/mss-journal

# interrupteurs de fonctionnalités (feature switches)
AVEC_JOURNAL_EN_MEMOIRE= # `true` pour utiliser un « Journal MSS » en mémoire. Sinon le journal utilisera la base de données « URL_SERVEUR_BASE_DONNEES_JOURNAL »
AVEC_JOURNAL_MEMOIRE_QUI_LOG_CONSOLE= # `true` pour que le « Journal MSS » en mémoire logue les événements reçus dans la console
AVEC_EMAIL_MEMOIRE_QUI_LOG_CONSOLE= # `true` pour que les e-mails passants par l'adaptateur mémoire soient logués dans la console
AVEC_TRACKING_SENDINGBLUE_QUI_LOG_CONSOLE= # `true` pour que les événements envoyés au tracking soient logués dans la console
AVEC_CHIFFREMENT_PAR_VAULT= # `true` pour utiliser l'adaptateur de chiffrement qui utilise Vault. Cela nécessite de valoriser les variables d'environnement `CHIFFREMENT_…`.
AVEC_GENERATION_PDF_EXTERNE= # `true` pour utiliser un puppeteer.connect() (au lieu de `.launch()`) pour la génération PDF. `true` nécessite les autres variables `GENERATION_PDF_`.

GENERATION_PDF_URL_DU_SERVICE= # URL du servie de génération de PDF. Il s'agit de l'URL d'une instance de Browserless. En local : ws://mss-browserless:9090
GENERATION_PDF_TOKEN_DU_SERVICE= # Token de connexion au Browserless. En local, doit correspondre au TOKEN déclaré dans le docker-compose : dev-en-local

# Politique de cache
CACHE_CONTROL_FICHIERS_STATIQUES= # politique de `cache-control` sur les fichiers statiques, mettre à `no-store` ou `public, max-age=0` pour le dev. local

# configuration du `rate-limit`
NB_REQUETES_MAX_PAR_MINUTE= # Nombre maximal de requêtes autorisées par IP et par minute, supprimer la variable permet de désactiver la protection
NB_REQUETES_MAX_PAR_MINUTE_ENDPOINT_SENSIBLE= # Nombre maximal de requêtes autorisées par IP et par minute pour les endpoints sensibles (connexion, inscription, modification de mot de passe, creation de service), supprimer la variable permet de désactiver la protection


CHIFFREMENT_URL_BASE_DU_SERVICE= # URL de base du service de chiffrement. Tout jusqu'à `/v1` exclu.
CHIFFREMENT_CLE_DU_MOTEUR_TRANSIT= # Nom de la clé Transit à utiliser.
CHIFFREMENT_TOKEN_VAULT= # Token à utiliser pour le chiffrement.

# API Baleen
BALEEN_TOKEN= # Le Personal Access Token (PAT) permettant d'utiliser l'API Baleen
BALEEN_NAMESPACE = # L'identifiant de l'application Baleen

# Feature Flags
FEATURE_FLAG_VISITE_GUIDEE= # Pour activer la visite guidée. Supprimer la variable d'env pour désactiver la feature.

# Crisp
CRISP_ID_SITE= # L'identifiant "WebsiteID" de MonServiceSécurisé
CRISP_CLE_API= # La clé d'API, au format "API_TOKEN:API_SECRET"
CRISP_ID_ARTICLE_PROMOUVOIR= # L'identifiant de l'article "Promouvoir MSS"
CRISP_ID_ARTICLE_DEVENIR_AMBASSADEUR= # L'identifiant de l'article "Devenir ambassadeur"
CRISP_ID_ARTICLE_FAIRE_CONNAITRE= # L'identifiant de l'article "Faire connaître et recommander"
CRISP_ID_ARTICLE_ROADMAP= # L'identifiant de l'article "Co-construire MSS avec nous"
CRISP_ID_CATEGORIE_BLOG= # L'identifiant de la catégorie `blog` des articles

# Maintenance
MODE_MAINTENANCE= # 'true' pour activer le mode maintenance. Renvoi une erreur 503 et affiche une page dédiée pour toutes les requêtes
PREPARATION_MODE_MAINTENANCE = # Permet d'activer un bandeau annonçant une maintenance ce jour. Au format "Jour complet - Xh à Xh". ex: "Jeudi 5 septembre 2024 - 17h à 19h"

# OIDC
OIDC_URL_BASE = # Adresse de base du serveur OIDC
OIDC_CLIENT_ID = # Identifiant du fournisseur de service
OIDC_CLIENT_SECRET = # Secret du fournisseur de service

# STATISIQUES
METABASE_API_KEY = # Clé d'api pour Metabase
METABASE_ID_QUESTION_NB_UTILISATEURS = # Identifiant de la question concernant le nombre d'utilisateurs dans Metabase
METABASE_ID_QUESTION_NB_SERVICES = # Identifiant de la question concernant le nombre de services dans Metabase
METABASE_ID_QUESTION_NB_VULNERABILITES = # Identifiant de la question concernant le nombre de vulnérabilités corrigées dans Metabase